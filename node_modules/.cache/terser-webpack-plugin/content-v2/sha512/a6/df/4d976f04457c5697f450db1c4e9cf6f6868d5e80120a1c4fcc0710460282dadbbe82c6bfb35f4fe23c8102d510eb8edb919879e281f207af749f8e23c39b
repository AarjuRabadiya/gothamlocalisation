{"map":"{\"version\":3,\"sources\":[\"main.28cefb2463a336ae0766.hot-update.js\"],\"names\":[\"webpackHotUpdate\",\"./Src/Locales/cn/Logincn.json\",\"./Src/Locales/en/Loginen.json\",\"./Src/Locales/jp/Loginjp.json\",\"./Src/i18.js\",\"module\",\"__webpack_exports__\",\"__webpack_require__\",\"eval\",\"./node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js\",\"./node_modules/i18next-xhr-backend/dist/esm/i18nextXHRBackend.js\"],\"mappings\":\"AAAAA,iBAAiB,OAAO,CAElBC,iCACN,EAEMC,iCACN,EAEMC,iCACN,EAEMC,eAKA,SAAUC,OAAQC,oBAAqBC,qBAE7C,aACAC,KAAK,myDAICC,6FAKA,SAAUJ,OAAQC,oBAAqBC,qBAE7C,aACAC,KAAK,qtYAICE,mEAKA,SAAUL,OAAQC,oBAAqBC,qBAE7C,aACAC,KAAK\"}","code":"webpackHotUpdate(\"main\",{\"./Src/Locales/cn/Logincn.json\":!1,\"./Src/Locales/en/Loginen.json\":!1,\"./Src/Locales/jp/Loginjp.json\":!1,\"./Src/i18.js\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var i18next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! i18next */ \"./node_modules/i18next/dist/esm/i18next.js\");\\n/* harmony import */ var i18next_xhr_backend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! i18next-xhr-backend */ \"./node_modules/i18next-xhr-backend/dist/esm/i18nextXHRBackend.js\");\\n/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-i18next */ \"./node_modules/react-i18next/dist/es/index.js\");\\n/* harmony import */ var i18next_browser_languagedetector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! i18next-browser-languagedetector */ \"./node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js\");\\n\\n\\n\\n\\ni18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].use(i18next_xhr_backend__WEBPACK_IMPORTED_MODULE_1__[\"default\"]).use(i18next_browser_languagedetector__WEBPACK_IMPORTED_MODULE_3__[\"default\"]).use(react_i18next__WEBPACK_IMPORTED_MODULE_2__[\"initReactI18next\"]).init({\\n  fallbackLng: \"en\",\\n  lang: \"en\",\\n  language: \"en\",\\n  async: true,\\n  debug: false,\\n  react: {\\n    // wait: true,\\n    useSuspense: true\\n  },\\n  languageOptions: [\"en\", \"jp\", \"cn\", \"vm\"],\\n  whitelist: [\"en\", \"jp\", \"cn\", \"vm\"],\\n  saveMissing: true,\\n  saveMissingTo: \"all\",\\n  keySeparator: true,\\n  ns: [\"translation\"],\\n  defaultNS: \"translation\",\\n  backend: {\\n    loadPath: \"\".concat(\"https://api.nftmining.com/api\", \"/translations/{{lng}}\"),\\n    addPath: \"\",\\n    allowMultiLoading: true,\\n    crossDomain: false\\n  }\\n}, function (error, t) {\\n  if (error) console.error(error);\\n});\\n/* harmony default export */ __webpack_exports__[\"default\"] = (i18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\\n\\n//# sourceURL=webpack:///./Src/i18.js?')},\"./node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \\\"./node_modules/@babel/runtime/helpers/esm/createClass.js\\\");\\n\\n\\n\\nvar arr = [];\\nvar each = arr.forEach;\\nvar slice = arr.slice;\\nfunction defaults(obj) {\\n  each.call(slice.call(arguments, 1), function (source) {\\n    if (source) {\\n      for (var prop in source) {\\n        if (obj[prop] === undefined) obj[prop] = source[prop];\\n      }\\n    }\\n  });\\n  return obj;\\n}\\n\\nvar cookie = {\\n  create: function create(name, value, minutes, domain) {\\n    var cookieOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\\n      path: '/'\\n    };\\n    var expires;\\n\\n    if (minutes) {\\n      var date = new Date();\\n      date.setTime(date.getTime() + minutes * 60 * 1000);\\n      expires = '; expires=' + date.toUTCString();\\n    } else expires = '';\\n\\n    domain = domain ? 'domain=' + domain + ';' : '';\\n    cookieOptions = Object.keys(cookieOptions).reduce(function (acc, key) {\\n      return acc + ';' + key.replace(/([A-Z])/g, function ($1) {\\n        return '-' + $1.toLowerCase();\\n      }) + '=' + cookieOptions[key];\\n    }, '');\\n    document.cookie = name + '=' + encodeURIComponent(value) + expires + ';' + domain + cookieOptions;\\n  },\\n  read: function read(name) {\\n    var nameEQ = name + '=';\\n    var ca = document.cookie.split(';');\\n\\n    for (var i = 0; i < ca.length; i++) {\\n      var c = ca[i];\\n\\n      while (c.charAt(0) === ' ') {\\n        c = c.substring(1, c.length);\\n      }\\n\\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\\n    }\\n\\n    return null;\\n  },\\n  remove: function remove(name) {\\n    this.create(name, '', -1);\\n  }\\n};\\nvar cookie$1 = {\\n  name: 'cookie',\\n  lookup: function lookup(options) {\\n    var found;\\n\\n    if (options.lookupCookie && typeof document !== 'undefined') {\\n      var c = cookie.read(options.lookupCookie);\\n      if (c) found = c;\\n    }\\n\\n    return found;\\n  },\\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\\n    if (options.lookupCookie && typeof document !== 'undefined') {\\n      cookie.create(options.lookupCookie, lng, options.cookieMinutes, options.cookieDomain, options.cookieOptions);\\n    }\\n  }\\n};\\n\\nvar querystring = {\\n  name: 'querystring',\\n  lookup: function lookup(options) {\\n    var found;\\n\\n    if (typeof window !== 'undefined') {\\n      var query = window.location.search.substring(1);\\n      var params = query.split('&');\\n\\n      for (var i = 0; i < params.length; i++) {\\n        var pos = params[i].indexOf('=');\\n\\n        if (pos > 0) {\\n          var key = params[i].substring(0, pos);\\n\\n          if (key === options.lookupQuerystring) {\\n            found = params[i].substring(pos + 1);\\n          }\\n        }\\n      }\\n    }\\n\\n    return found;\\n  }\\n};\\n\\nvar hasLocalStorageSupport;\\n\\ntry {\\n  hasLocalStorageSupport = window !== 'undefined' && window.localStorage !== null;\\n  var testKey = 'i18next.translate.boo';\\n  window.localStorage.setItem(testKey, 'foo');\\n  window.localStorage.removeItem(testKey);\\n} catch (e) {\\n  hasLocalStorageSupport = false;\\n}\\n\\nvar localStorage = {\\n  name: 'localStorage',\\n  lookup: function lookup(options) {\\n    var found;\\n\\n    if (options.lookupLocalStorage && hasLocalStorageSupport) {\\n      var lng = window.localStorage.getItem(options.lookupLocalStorage);\\n      if (lng) found = lng;\\n    }\\n\\n    return found;\\n  },\\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\\n    if (options.lookupLocalStorage && hasLocalStorageSupport) {\\n      window.localStorage.setItem(options.lookupLocalStorage, lng);\\n    }\\n  }\\n};\\n\\nvar hasSessionStorageSupport;\\n\\ntry {\\n  hasSessionStorageSupport = window !== 'undefined' && window.sessionStorage !== null;\\n  var testKey$1 = 'i18next.translate.boo';\\n  window.sessionStorage.setItem(testKey$1, 'foo');\\n  window.sessionStorage.removeItem(testKey$1);\\n} catch (e) {\\n  hasSessionStorageSupport = false;\\n}\\n\\nvar sessionStorage = {\\n  name: 'sessionStorage',\\n  lookup: function lookup(options) {\\n    var found;\\n\\n    if (options.lookupsessionStorage && hasSessionStorageSupport) {\\n      var lng = window.sessionStorage.getItem(options.lookupsessionStorage);\\n      if (lng) found = lng;\\n    }\\n\\n    return found;\\n  },\\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\\n    if (options.lookupsessionStorage && hasSessionStorageSupport) {\\n      window.sessionStorage.setItem(options.lookupsessionStorage, lng);\\n    }\\n  }\\n};\\n\\nvar navigator$1 = {\\n  name: 'navigator',\\n  lookup: function lookup(options) {\\n    var found = [];\\n\\n    if (typeof navigator !== 'undefined') {\\n      if (navigator.languages) {\\n        // chrome only; not an array, so can't use .push.apply instead of iterating\\n        for (var i = 0; i < navigator.languages.length; i++) {\\n          found.push(navigator.languages[i]);\\n        }\\n      }\\n\\n      if (navigator.userLanguage) {\\n        found.push(navigator.userLanguage);\\n      }\\n\\n      if (navigator.language) {\\n        found.push(navigator.language);\\n      }\\n    }\\n\\n    return found.length > 0 ? found : undefined;\\n  }\\n};\\n\\nvar htmlTag = {\\n  name: 'htmlTag',\\n  lookup: function lookup(options) {\\n    var found;\\n    var htmlTag = options.htmlTag || (typeof document !== 'undefined' ? document.documentElement : null);\\n\\n    if (htmlTag && typeof htmlTag.getAttribute === 'function') {\\n      found = htmlTag.getAttribute('lang');\\n    }\\n\\n    return found;\\n  }\\n};\\n\\nvar path = {\\n  name: 'path',\\n  lookup: function lookup(options) {\\n    var found;\\n\\n    if (typeof window !== 'undefined') {\\n      var language = window.location.pathname.match(/\\\\/([a-zA-Z-]*)/g);\\n\\n      if (language instanceof Array) {\\n        if (typeof options.lookupFromPathIndex === 'number') {\\n          if (typeof language[options.lookupFromPathIndex] !== 'string') {\\n            return undefined;\\n          }\\n\\n          found = language[options.lookupFromPathIndex].replace('/', '');\\n        } else {\\n          found = language[0].replace('/', '');\\n        }\\n      }\\n    }\\n\\n    return found;\\n  }\\n};\\n\\nvar subdomain = {\\n  name: 'subdomain',\\n  lookup: function lookup(options) {\\n    var found;\\n\\n    if (typeof window !== 'undefined') {\\n      var language = window.location.href.match(/(?:http[s]*\\\\:\\\\/\\\\/)*(.*?)\\\\.(?=[^\\\\/]*\\\\..{2,5})/gi);\\n\\n      if (language instanceof Array) {\\n        if (typeof options.lookupFromSubdomainIndex === 'number') {\\n          found = language[options.lookupFromSubdomainIndex].replace('http://', '').replace('https://', '').replace('.', '');\\n        } else {\\n          found = language[0].replace('http://', '').replace('https://', '').replace('.', '');\\n        }\\n      }\\n    }\\n\\n    return found;\\n  }\\n};\\n\\nfunction getDefaults() {\\n  return {\\n    order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag'],\\n    lookupQuerystring: 'lng',\\n    lookupCookie: 'i18next',\\n    lookupLocalStorage: 'i18nextLng',\\n    // cache user language\\n    caches: ['localStorage'],\\n    excludeCacheFor: ['cimode'],\\n    //cookieMinutes: 10,\\n    //cookieDomain: 'myDomain'\\n    checkWhitelist: true,\\n    checkForSimilarInWhitelist: false\\n  };\\n}\\n\\nvar Browser =\\n/*#__PURE__*/\\nfunction () {\\n  function Browser(services) {\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(this, Browser);\\n\\n    this.type = 'languageDetector';\\n    this.detectors = {};\\n    this.init(services, options);\\n  }\\n\\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(Browser, [{\\n    key: \\\"init\\\",\\n    value: function init(services) {\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n      var i18nOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n      this.services = services;\\n      this.options = defaults(options, this.options || {}, getDefaults()); // if checking for similar, user needs to check whitelist\\n\\n      if (this.options.checkForSimilarInWhitelist) this.options.checkWhitelist = true; // backwards compatibility\\n\\n      if (this.options.lookupFromUrlIndex) this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex;\\n      this.i18nOptions = i18nOptions;\\n      this.addDetector(cookie$1);\\n      this.addDetector(querystring);\\n      this.addDetector(localStorage);\\n      this.addDetector(sessionStorage);\\n      this.addDetector(navigator$1);\\n      this.addDetector(htmlTag);\\n      this.addDetector(path);\\n      this.addDetector(subdomain);\\n    }\\n  }, {\\n    key: \\\"addDetector\\\",\\n    value: function addDetector(detector) {\\n      this.detectors[detector.name] = detector;\\n    }\\n  }, {\\n    key: \\\"detect\\\",\\n    value: function detect(detectionOrder) {\\n      var _this = this;\\n\\n      if (!detectionOrder) detectionOrder = this.options.order;\\n      var detected = [];\\n      detectionOrder.forEach(function (detectorName) {\\n        if (_this.detectors[detectorName]) {\\n          var lookup = _this.detectors[detectorName].lookup(_this.options);\\n\\n          if (lookup && typeof lookup === 'string') lookup = [lookup];\\n          if (lookup) detected = detected.concat(lookup);\\n        }\\n      });\\n      var found;\\n      detected.forEach(function (lng) {\\n        if (found) return;\\n\\n        var cleanedLng = _this.services.languageUtils.formatLanguageCode(lng);\\n\\n        if (!_this.options.checkWhitelist || _this.services.languageUtils.isWhitelisted(cleanedLng)) found = cleanedLng;\\n\\n        if (!found && _this.options.checkForSimilarInWhitelist) {\\n          found = _this.getSimilarInWhitelist(cleanedLng);\\n        }\\n      });\\n\\n      if (!found) {\\n        var fallbacks = this.i18nOptions.fallbackLng;\\n        if (typeof fallbacks === 'string') fallbacks = [fallbacks];\\n        if (!fallbacks) fallbacks = [];\\n\\n        if (Object.prototype.toString.apply(fallbacks) === '[object Array]') {\\n          found = fallbacks[0];\\n        } else {\\n          found = fallbacks[0] || fallbacks[\\\"default\\\"] && fallbacks[\\\"default\\\"][0];\\n        }\\n      }\\n\\n      return found;\\n    }\\n  }, {\\n    key: \\\"cacheUserLanguage\\\",\\n    value: function cacheUserLanguage(lng, caches) {\\n      var _this2 = this;\\n\\n      if (!caches) caches = this.options.caches;\\n      if (!caches) return;\\n      if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) return;\\n      caches.forEach(function (cacheName) {\\n        if (_this2.detectors[cacheName]) _this2.detectors[cacheName].cacheUserLanguage(lng, _this2.options);\\n      });\\n    }\\n  }, {\\n    key: \\\"getSimilarInWhitelist\\\",\\n    value: function getSimilarInWhitelist(cleanedLng) {\\n      var _this3 = this;\\n\\n      if (!this.i18nOptions.whitelist) return;\\n\\n      if (cleanedLng.includes('-')) {\\n        // i.e. es-MX should check if es is in whitelist\\n        var prefix = cleanedLng.split('-')[0];\\n        var cleanedPrefix = this.services.languageUtils.formatLanguageCode(prefix);\\n        if (this.services.languageUtils.isWhitelisted(cleanedPrefix)) return cleanedPrefix; // if reached here, nothing found. continue to search for similar using only prefix\\n\\n        cleanedLng = cleanedPrefix;\\n      } // i.e. 'pt' should return 'pt-BR'. If multiple in whitelist with 'pt-', then use first one in whitelist\\n\\n\\n      var similar = this.i18nOptions.whitelist.find(function (whitelistLng) {\\n        var cleanedWhitelistLng = _this3.services.languageUtils.formatLanguageCode(whitelistLng);\\n\\n        if (cleanedWhitelistLng.startsWith(cleanedLng)) return cleanedWhitelistLng;\\n      });\\n      if (similar) return similar;\\n    }\\n  }]);\\n\\n  return Browser;\\n}();\\n\\nBrowser.type = 'languageDetector';\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (Browser);\\n\\n\\n//# sourceURL=webpack:///./node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js?\")},\"./node_modules/i18next-xhr-backend/dist/esm/i18nextXHRBackend.js\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \\\"./node_modules/@babel/runtime/helpers/esm/createClass.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \\\"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\\\");\\n/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ \\\"./node_modules/@babel/runtime/helpers/esm/typeof.js\\\");\\n\\n\\n\\n\\n\\nvar arr = [];\\nvar each = arr.forEach;\\nvar slice = arr.slice;\\nfunction defaults(obj) {\\n  each.call(slice.call(arguments, 1), function (source) {\\n    if (source) {\\n      for (var prop in source) {\\n        if (obj[prop] === undefined) obj[prop] = source[prop];\\n      }\\n    }\\n  });\\n  return obj;\\n}\\n\\nfunction addQueryString(url, params) {\\n  if (params && Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(params) === 'object') {\\n    var queryString = '',\\n        e = encodeURIComponent; // Must encode data\\n\\n    for (var paramName in params) {\\n      queryString += '&' + e(paramName) + '=' + e(params[paramName]);\\n    }\\n\\n    if (!queryString) {\\n      return url;\\n    }\\n\\n    url = url + (url.indexOf('?') !== -1 ? '&' : '?') + queryString.slice(1);\\n  }\\n\\n  return url;\\n} // https://gist.github.com/Xeoncross/7663273\\n\\n\\nfunction ajax(url, options, callback, data, cache) {\\n  if (data && Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(data) === 'object') {\\n    if (!cache) {\\n      data['_t'] = new Date();\\n    } // URL encoded form data must be in querystring format\\n\\n\\n    data = addQueryString('', data).slice(1);\\n  }\\n\\n  if (options.queryStringParams) {\\n    url = addQueryString(url, options.queryStringParams);\\n  }\\n\\n  try {\\n    var x;\\n\\n    if (XMLHttpRequest) {\\n      x = new XMLHttpRequest();\\n    } else {\\n      x = new ActiveXObject('MSXML2.XMLHTTP.3.0');\\n    }\\n\\n    x.open(data ? 'POST' : 'GET', url, 1);\\n\\n    if (!options.crossDomain) {\\n      x.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\\n    }\\n\\n    x.withCredentials = !!options.withCredentials;\\n\\n    if (data) {\\n      x.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\\n    }\\n\\n    if (x.overrideMimeType) {\\n      x.overrideMimeType(\\\"application/json\\\");\\n    }\\n\\n    var h = options.customHeaders;\\n    h = typeof h === 'function' ? h() : h;\\n\\n    if (h) {\\n      for (var i in h) {\\n        x.setRequestHeader(i, h[i]);\\n      }\\n    }\\n\\n    x.onreadystatechange = function () {\\n      x.readyState > 3 && callback && callback(x.responseText, x);\\n    };\\n\\n    x.send(data);\\n  } catch (e) {\\n    console && console.log(e);\\n  }\\n}\\n\\nfunction getDefaults() {\\n  return {\\n    loadPath: '/locales/{{lng}}/{{ns}}.json',\\n    addPath: '/locales/add/{{lng}}/{{ns}}',\\n    allowMultiLoading: false,\\n    parse: JSON.parse,\\n    parsePayload: function parsePayload(namespace, key, fallbackValue) {\\n      return Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"])({}, key, fallbackValue || '');\\n    },\\n    crossDomain: false,\\n    ajax: ajax\\n  };\\n}\\n\\nvar Backend =\\n/*#__PURE__*/\\nfunction () {\\n  function Backend(services) {\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"])(this, Backend);\\n\\n    this.init(services, options);\\n    this.type = 'backend';\\n  }\\n\\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(Backend, [{\\n    key: \\\"init\\\",\\n    value: function init(services) {\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n      this.services = services;\\n      this.options = defaults(options, this.options || {}, getDefaults());\\n    }\\n  }, {\\n    key: \\\"readMulti\\\",\\n    value: function readMulti(languages, namespaces, callback) {\\n      var loadPath = this.options.loadPath;\\n\\n      if (typeof this.options.loadPath === 'function') {\\n        loadPath = this.options.loadPath(languages, namespaces);\\n      }\\n\\n      var url = this.services.interpolator.interpolate(loadPath, {\\n        lng: languages.join('+'),\\n        ns: namespaces.join('+')\\n      });\\n      this.loadUrl(url, callback);\\n    }\\n  }, {\\n    key: \\\"read\\\",\\n    value: function read(language, namespace, callback) {\\n      var loadPath = this.options.loadPath;\\n\\n      if (typeof this.options.loadPath === 'function') {\\n        loadPath = this.options.loadPath([language], [namespace]);\\n      }\\n\\n      var url = this.services.interpolator.interpolate(loadPath, {\\n        lng: language,\\n        ns: namespace\\n      });\\n      this.loadUrl(url, callback);\\n    }\\n  }, {\\n    key: \\\"loadUrl\\\",\\n    value: function loadUrl(url, callback) {\\n      var _this = this;\\n\\n      this.options.ajax(url, this.options, function (data, xhr) {\\n        if (xhr.status >= 500 && xhr.status < 600) return callback('failed loading ' + url, true\\n        /* retry */\\n        );\\n        if (xhr.status >= 400 && xhr.status < 500) return callback('failed loading ' + url, false\\n        /* no retry */\\n        );\\n        var ret, err;\\n\\n        try {\\n          ret = _this.options.parse(data, url);\\n        } catch (e) {\\n          err = 'failed parsing ' + url + ' to json';\\n        }\\n\\n        if (err) return callback(err, false);\\n        callback(null, ret);\\n      });\\n    }\\n  }, {\\n    key: \\\"create\\\",\\n    value: function create(languages, namespace, key, fallbackValue) {\\n      var _this2 = this;\\n\\n      if (typeof languages === 'string') languages = [languages];\\n      var payload = this.options.parsePayload(namespace, key, fallbackValue);\\n      languages.forEach(function (lng) {\\n        var url = _this2.services.interpolator.interpolate(_this2.options.addPath, {\\n          lng: lng,\\n          ns: namespace\\n        });\\n\\n        _this2.options.ajax(url, _this2.options, function (data, xhr) {//const statusCode = xhr.status.toString();\\n          // TODO: if statusCode === 4xx do log\\n        }, payload);\\n      });\\n    }\\n  }]);\\n\\n  return Backend;\\n}();\\n\\nBackend.type = 'backend';\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (Backend);\\n\\n\\n//# sourceURL=webpack:///./node_modules/i18next-xhr-backend/dist/esm/i18nextXHRBackend.js?\")}});","extractedComments":[]}